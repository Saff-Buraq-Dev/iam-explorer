name: CI

on:
  push:
    branches: ["**"]

jobs:
  test:
    name: Test on multiple Python versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install .[dev]

      - name: Lint code (flake8)
        run: |
          flake8 src/iam_explorer tests

      - name: Test with coverage
        run: |
          pytest --cov --junitxml=junit.xml | tee pytest-report.txt

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload test results to Codecov
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  release:
    name: Publish via Semantic Release
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    needs: [test]
    if: >
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/heads/main')
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Semantic Version Release
        id: release
        uses: python-semantic-release/python-semantic-release@v9.17.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_name: "github-actions"
          git_committer_email: "actions@users.noreply.github.com"

      - name: Build package distributions
        run: |
          python3 -m pip install --upgrade build
          python -m build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
  publish-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    needs: [release]
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
